{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","e","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","updateInput","target","onClick","addItem","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAsFeA,G,wDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IALS,E,wDASPC,EAAKC,GAEfC,KAAKC,SAAL,eACGH,EAAMC,M,8BAIHG,GAEN,IAAMN,EAAU,CACdO,GAAI,EAAIC,KAAKC,SACbN,MAAOC,KAAKL,MAAMC,QAAQU,SAItBT,EAAI,YAAOG,KAAKL,MAAME,MAG5BA,EAAKU,KAAKX,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAS,O,iCAIFO,GACT,IAEMK,EAFI,YAAOR,KAAKL,MAAME,MAEHY,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDH,KAAKC,SAAS,CAAEJ,KAAMW,M,+BAGd,IAAD,OACP,OACE,sBAAKG,UAAU,MAAf,UACE,qDACA,sBAAKA,UAAU,WAAf,2BAEA,uBACE,uBACEC,KAAK,OACLC,YAAY,oBACZd,MAAOC,KAAKL,MAAMC,QAClBkB,SAAU,SAAAZ,GAAC,OAAI,EAAKa,YAAY,UAAWb,EAAEc,OAAOjB,UAEtD,wBACEkB,QAAS,kBAAM,EAAKC,WADtB,iBAKA,uBACA,6BACGlB,KAAKL,MAAME,KAAKsB,KAAI,SAAAT,GACnB,OACE,+BACGA,EAAKX,MACN,wBAAQkB,QAAS,kBAAM,EAAKG,WAAWV,EAAKP,KAA5C,iBAFOO,EAAKP,mB,GApEZkB,cCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96ce6223.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: \"\",\n      list: []\n    }\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem(e) {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list items\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Charles' To-Do List</h1>\n        <div className=\"itemText\">\n          Add an item...\n        <br />\n          <input\n            type=\"text\"\n            placeholder=\"Type item here...\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button\n            onClick={() => this.addItem()}\n          >\n            Add\n        </button>\n          <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button onClick={() => this.deleteItem(item.id)}>\n                X\n                  </button>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}